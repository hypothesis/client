version: 2
workflows:
  version: 2
  build-deploy:
    jobs:
      - build-deploy:
          filters:
            branches:
              only:
                - master
jobs:
  build-deploy:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: yarn install --production=false
      - run: yarn run build
      - run: sudo apt-get install python-dev
      - run:
          name: Install AWS CLI
          command: |
            export PIP=$(which pip pip3 | head -1)
            if [[ -n $PIP ]]; then
              if which sudo > /dev/null; then
                sudo $PIP install awscli --upgrade
              else
                # This installs the AWS CLI to ~/.local/bin. Make sure that ~/.local/bin is in your $PATH.
                $PIP install aws --upgrade --user
              fi
            elif [[ $(which unzip curl | wc -l) -eq 2 ]]; then
              cd
              curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
              unzip awscli-bundle.zip
              if which sudo > /dev/null; then
                sudo ~/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
              else
                # This installs the AWS CLI to the default location (~/.local/lib/aws) and create a symbolic link (symlink) at ~/bin/aws. Make sure that ~/bin is in your $PATH.
                awscli-bundle/install -b ~/bin/aws
              fi
              rm -rf awscli-bundle*
              cd -
            else
              echo "Unable to install AWS CLI. Please install pip."
              exit 1
            fi
      - run:
          name: Configure AWS Access Key ID
          command: |
            aws configure set aws_access_key_id \
            $AWS_ACCESS_KEY_ID \
            --profile default
      - run:
          name: Configure AWS Secret Access Key
          command: |
            aws configure set aws_secret_access_key \
            $AWS_SECRET_ACCESS_KEY \
            --profile default
      - run:
          name: Configure AWS default region
          command: |
            aws configure set region $AWS_REGION \
            --profile default
      - deploy:
          name: Deploy to S3
          command: |-
            aws s3 sync --acl public-read --delete build s3://${BUCKET}/
      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*"