@import './base';
@import './forms';
@import './mixins/responsive';

// Note: These includes are currently source-order
// dependent.
@import './styled-text';
@import './page';

//ELEMENT STYLES////////////////////////////////
body {
  position: relative;
  background-color: $body-background;
  color: $text-color;
}

p {
  hyphens: auto;

  & + p {
    margin: 1em 0 0;
  }
}

em { font-style: italic; }

html {
  font-size: $base-font-size;
  line-height: $base-line-height;
}

//MCRANDOM////////////////////////////////

.small {
  font-size: $body1-font-size;
}

//Candidate for cleanup
.btn-link {
  box-shadow: none;
  @include reset-box-model;
  background: none;
  background-color: transparent;
  text-decoration: underline;
  border: none;
  cursor: pointer;
  color: $link-color;
  position: static;

  &:hover, &:focus, &.js-focus, &.js-hover {
    color: $link-color-hover;
  }
}

.red {
  color: $brand-color;
}

.pull-left {
  float: left;
}

.pull-right {
  float: right;
}


//CLOSER////////////////////////////////
.close {
  cursor: pointer;
  float: right;
  opacity: .6;
  &:active, &:hover {
    opacity: 1;
  }
}

.share-links {
  a {
    font-size: 1.5em;
    padding: .3em;
  }
}

//FORM RELATED////////////////////////////////

.form-inline .control-group { margin-bottom: 0; }

.form-vertical {
  select, textarea, input, button {
    display: block;
    // margin-top: .75em;
  }
}

//DROPDOWNS////////////////////////////////
.dropdown {
  position: relative;
  span {
    cursor: pointer;
    &:hover {
      color: black;
    }
  }
}

.dropdown-toggle {
  cursor: pointer;

  &:active {
    outline: 0;
  }
}

.dropdown-menu {
  visibility: hidden;
  background: $white;
  border: solid 1px $gray-lighter;
  margin-top: 6px;
  top: 100%;
  float: left;
  position: absolute;
  z-index: 2;

  &__link {
    color: inherit;

    display: block;
    line-height: 1;
    white-space: nowrap;
    font-size: $body2-font-size;
    cursor: pointer;

    &:hover {
      color: $brand-color;
    }
  }

  &__link--subtle {
    color: $color-gray;
  }

  // These psuedo-elements add the speech bubble tail / triangle.
  &:before, &:after {
    // http://www.red-team-design.com/css-diagonal-borders-still-not-rendering-properly-on-firefox
    transform: scale(.9999);
    border-color: rgba(0, 0, 0, 0);

    border-style: solid;
    border-width: 0 7px 6px 7px;
    content: '';
    position: absolute;
    height: 0;
    left: 0;
    width: 0;
  }

  &:before {
    border-bottom-color: $gray-lighter;
    top: -7px;
  }

  &:after {
    border-bottom-color: $white;
    top: -6px;
    z-index: 3;
  }

  // Aligns the dropdown menu to right
  &.pull-right {
    right: 0;
    left: auto;
    text-align: right;

    // Align the tail
    &:before, &:after {
      left: auto;
      right: 0;
    }
  }

  // Aligns the dropdown menu's '▲' indicator to the center,
  // the menu itself has to be aligned by the user
  &.pull-center {
    // Align the tail
    &:before, &:after {
      left: auto;
      right: 50%;
    }
  }

  // Hides the dropdown menu's default ▲ indicator.
  // This is used for cases where a separate element is used
  // as the indicator
  &.pull-none {
    &:before, &:after {
      display: none;
    }
  }
}

.open {
  & > .dropdown-menu {
    @include smallshadow;
    visibility: visible;
  }
}

// A 'standalone' arrow for the top of a dropdown menu.
// .dropdown-menu has a "built-in" arrow using CSS :before,:after.
//
// The standalone arrow is used when the dropdown menu arrow needs
// to be positioned relative to the item which opens the menu rather
// than relative to the dropdown menu content.
//
// When using the standalone arrow, the built-in arrow is hidden using
// the .pull-none class
.dropdown-menu__top-arrow {
  // the element itself forms the outer border of the arrow
  $arrow-size: 7px;
  $bottom-offset: $arrow-size - 1px;
  visibility: hidden;

  width: 0px;
  height: 0px;
  border-top: none;
  border-left: $arrow-size solid transparent;
  border-right: $arrow-size solid transparent;
  border-bottom: $arrow-size solid $gray-lighter;
  position: absolute;
  right: 0px;
  bottom: - $bottom-offset;

  z-index: 3;

  // :after is used to create another arrow of the same size at a 1px
  // vertical offset, forming the fill and base of the arrow
  &:after {
    width: 0px;
    height: 0px;
    border-top: none;
    border-left: $arrow-size solid transparent;
    border-right: $arrow-size solid transparent;
    border-bottom: $arrow-size solid white;
    content: "";
    position: absolute;
    left: 0 - $arrow-size;
    top: 1px;
  }
}

.open > .dropdown-menu__top-arrow {
  visibility: visible;
}

// Row in a dropdown menu
.dropdown-menu__row {
  display: flex;
  flex-direction: row;
  align-items: center;
  padding-left: 8px;
  padding-right: 16px;

  min-height: 40px;
  min-width: 120px;

  &:not(:first-child) {
    border-top: dotted 1px $gray-lighter;
  }
}

.dropdown-menu__row--unpadded {
  padding-left: 0px;
  padding-right: 0px;
}

// Radio button in a dropdown menu
.dropdown-menu-radio {
  display: inline-block;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  margin-left: 8px;
  margin-right: 8px;

  border: 1px solid $color-silver;
}

.dropdown-menu-radio.is-selected {
  border: 4px solid $color-dove-gray;
}

//TABS////////////////////////////////
.nav-tabs {
  margin-bottom: .7em;

  & > li {
    display: inline-block;
    line-height: 1;

    a {
      font-family: $sans-font-family;
      font-weight: bold;
      color: $gray-dark;
      cursor: pointer;
      border-bottom: 3px solid transparent;
      padding-left: .153em;
      padding-right: .153em;
      padding-bottom: .076em;
    }

    &:active a {
      position: relative;
      top: .076em;
    }


    &.active:active a {
      top: 0;
    }

    &.active a {
      border-color: $gray-lighter;
    }

    &:before {
      content: "/";
      margin: 0 .75em;
    }

    &:first-child:before {
      content: none;
    }
  }
}

