{"version":3,"sources":["../../lib/check-dependencies.js"],"names":[],"mappings":"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","file":"check-dependencies.js","sourcesContent":["'use strict';\n\n/* eslint-disable no-undef */\n\nconst fs = require('fs');\nconst path = require('path');\nconst chalk = require('chalk');\nconst findup = require('findup-sync');\nconst _ = require('lodash');\nconst semver = require('semver');\nconst spawn = require('child_process').spawn;\nconst spawnSync = require('child_process').spawnSync;\n\n/* eslint-enable no-undef */\n\nconst checkDependenciesHelper = (syncOrAsync, config, callback) => {\n    // We treat the signature:\n    //     checkDependencies(callback)\n    // as:\n    //     checkDependencies({}, callback)\n\n    if (syncOrAsync === 'async') {\n        // Catch all cases where `config` is not an object - even if it's not a function\n        // so it's useless here, we need it to be assigned to `callback` to provide\n        // to the error message.\n        if (typeof callback !== 'function' && (typeof config !== 'object' || config == null)) {\n            callback = config;\n            config = null;\n        }\n        if (typeof callback !== 'function') {\n            if (callback == null) {\n                // In the async mode we return the promise anyway; assign callback\n                // to noop to keep code consistency.\n                callback = _.noop;\n            } else {\n                // If callback was simply not provided, we assume the user wanted\n                // to handle the returned promise. If it was passed but not a function\n                // we assume user error and throw.\n                throw new Error('The provided callback wasn\\'t a function! Got:', callback);\n            }\n        }\n    }\n\n    const win32 = process.platform === 'win32';\n    const output = {log: [], error: []};\n\n    let depsDirName, packageJson, pkgManagerPath;\n\n    let installPrunePromise = Promise.resolve();\n    let success = true;\n    let installNeeded = false;\n    let pruneNeeded = false;\n\n    const options = _.defaults({}, config, {\n        packageManager: 'npm',\n        onlySpecified: false,\n        install: false,\n        scopeList: ['dependencies', 'devDependencies'],\n        optionalScopeList: ['optionalDependencies'],\n        verbose: false,\n        checkGitUrls: false,\n        checkCustomPackageNames: false,\n        log: console.log.bind(console),\n        error: console.error.bind(console),\n    });\n\n    const packageJsonName = options.packageManager === 'npm' ? 'package.json' : 'bower.json';\n    const packageJsonRegex = options.packageManager === 'npm' ? /package\\.json$/ : /bower\\.json$/;\n    depsDirName = options.packageManager === 'npm' ? 'node_modules' : 'bower_components';\n\n    const log = message => {\n        output.log.push(message);\n        if (options.verbose) {\n            options.log(message);\n        }\n    };\n\n    const error = message => {\n        output.error.push(message);\n        if (options.verbose) {\n            options.error(message);\n        }\n    };\n\n    const finish = () => {\n        output.status = success ? 0 : 1;\n        if (syncOrAsync === 'async') {\n            callback(output);\n            return new Promise(resolve => resolve(output));\n        }\n        return output;\n    };\n\n    const missingPackageJson = () => {\n        success = false;\n        error(`Missing ${ packageJsonName }!`);\n        return finish();\n    };\n\n    options.packageDir = options.packageDir || findup(packageJsonName);\n    if (!options.packageDir) {\n        return missingPackageJson();\n    }\n    options.packageDir = path.resolve(options.packageDir.replace(packageJsonRegex, ''));\n\n    packageJson = `${ options.packageDir }/${ packageJsonName }`;\n    if (!fs.existsSync(packageJson)) {\n        return missingPackageJson();\n    }\n    packageJson = require(packageJson);\n\n    if (options.packageManager === 'bower') {\n        const bowerConfig = require('bower-config').create(options.packageDir).load();\n        depsDirName = bowerConfig._config.directory;\n    }\n\n    // Bower uses a different name (with a dot) for package data of dependencies.\n    const depsJsonName = options.packageManager === 'npm' ? 'package.json' : '.bower.json';\n\n    if (options.packageManager === 'bower') {\n        // Allow a local bower.\n        pkgManagerPath = findup('node_modules/bower/bin/bower');\n    }\n\n    const depsDir = `${ options.packageDir }/${ depsDirName }`;\n\n    const getDepsMappingsFromScopeList = scopeList =>\n        // Get names of all packages specified in package.json/bower.json at keys from scopeList\n        // together with specified version numbers.\n        scopeList.reduce((result, scope) => _.merge(result, packageJson[scope] || {}), {});\n\n    // Make sure each package from `scopeList` is present and matches the specified version range.\n    // Packages from `optionalScopeList` may not be present but if they are, they are required\n    // to match the specified version range.\n    const checkPackage = ({name, versionString, isOptional}) => {\n        const depDir = `${ depsDir }/${ name }`;\n        const depJson = `${ depDir }/${ depsJsonName }`;\n\n        if (!fs.existsSync(depDir) || !fs.existsSync(depJson)) {\n            if (isOptional) {\n                log(`${ name }: ${ chalk.red('not installed!') }`);\n            } else {\n                error(`${ name }: ${ chalk.red('not installed!') }`);\n                success = false;\n            }\n            return;\n        }\n\n        // Let's look if we can get a valid version from a Git URL\n        if (options.checkGitUrls && /\\.git.*#v?(.+)$/.test(versionString)) {\n            versionString = (/#v?(.+)$/.exec(versionString))[1];\n            if (!semver.valid(versionString)) {\n                return;\n            }\n        }\n\n        // Quick and dirty check - make sure we're not dealing with a URL\n        if (/\\//.test(versionString)) {\n            return;\n        }\n\n        // Bower has the option to specify a custom name, e.g. 'packageOld' : 'package#1.2.3'\n        if (options.checkCustomPackageNames && options.packageManager !== 'npm') {\n            // Let's look if we can get a valid version from a custom package name (with a # in it)\n            if (/\\.*#v?(.+)$/.test(versionString)) {\n                versionString = (/#v?(.+)$/.exec(versionString))[1];\n                if (!semver.valid(versionString)) {\n                    return;\n                }\n            }\n        }\n\n        // If we are dealing with a custom package name, semver check won't work - skip it\n        if (/#/.test(versionString)) {\n            return;\n        }\n\n        // Skip version checks for 'latest' - the semver module won't help here and the check\n        // would have to consult the npm server, making the operation slow.\n        if (versionString === 'latest') {\n            return;\n        }\n\n        const depVersion = require(depJson).version;\n        if (semver.satisfies(depVersion, versionString)) {\n            log(`${ name }: installed: ${ chalk.green(depVersion)\n                }, expected: ${ chalk.green(versionString) }`);\n        } else {\n            success = false;\n            error(`${ name }: installed: ${ chalk.red(depVersion)\n                }, expected: ${ chalk.green(versionString) }`);\n        }\n    };\n\n    const depsMappings = getDepsMappingsFromScopeList(options.scopeList);\n    const optionalDepsMappings = getDepsMappingsFromScopeList(options.optionalScopeList);\n    const fullDepsMappings = _.assign({}, depsMappings, optionalDepsMappings);\n\n    _.forEach(depsMappings, (versionString, name) => {\n        checkPackage({name, versionString, isOptional: false});\n    });\n\n    _.forEach(optionalDepsMappings, (versionString, name) => {\n        checkPackage({name, versionString, isOptional: true});\n    });\n\n    installNeeded = !success;\n\n    if (options.onlySpecified) {\n        fs\n            .readdirSync(depsDir)\n\n            // Ignore hidden directories\n            .filter(depName => depName[0] !== '.')\n\n            // Ignore files\n            .filter(depName => fs.lstatSync(`${ depsDir }/${ depName }`).isDirectory())\n\n            .forEach(depName => {\n                let depSubDirName;\n\n                // Scoped packages\n                if (depName[0] === '@') {\n                    depName = fs.readdirSync(`${ depsDir }/${ depName }`)[0];\n\n                    // Ignore weird directories - if it just looks like a scoped package but\n                    // isn't one, just skip it.\n                    if (depSubDirName && !fullDepsMappings[depName]) {\n                        success = false;\n                        pruneNeeded = true;\n                        error(`Package ${ depName } installed, though it shouldn\\'t be`);\n                    }\n                    return;\n                }\n\n                // Regular packages\n                if (!fullDepsMappings[depName]) {\n                    success = false;\n                    pruneNeeded = true;\n                    error(`Package ${ depName } installed, though it shouldn\\'t be`);\n                }\n            });\n    }\n\n    if (success) {\n        output.depsWereOk = true;\n        return finish();\n    }\n    output.depsWereOk = false;\n\n    if (!options.install) {\n        if (options.onlySpecified) {\n            error(`Invoke ${ chalk.green(`${ options.packageManager } prune`) } and ${\n                chalk.green(`${ options.packageManager } install`)\n                } to install missing packages and remove excessive ones`);\n        } else {\n            error(`Invoke ${ chalk.green(`${ options.packageManager } install`)\n                } to install missing packages`);\n        }\n        return finish();\n    }\n\n\n    const installOrPrune = mode => {\n        log(`Invoking ${ chalk.green(`${ options.packageManager } ${ mode }`) }...`);\n\n        // If we're using a direct path, on Windows we need to invoke it via `node path`, not\n        // `cmd /c path`. In UNIX systems we can execute the command directly so no need to wrap.\n        let msg, spawnReturn;\n        const method = syncOrAsync === 'sync' ? spawnSync : spawn;\n\n        if (win32) {\n            spawnReturn = method(pkgManagerPath ? 'node' : 'cmd',\n                (pkgManagerPath ? [pkgManagerPath] : ['/c', options.packageManager]).concat([mode]),\n                {\n                    cwd: options.packageDir,\n                    stdio: 'inherit',\n                });\n        } else {\n            spawnReturn = method(options.packageManager,\n                [mode],\n                {\n                    cwd: options.packageDir,\n                    stdio: 'inherit',\n                });\n        }\n\n        if (syncOrAsync === 'sync') {\n            if (spawnReturn.status !== 0) {\n                msg = `${ options.packageManager } ${ mode } failed with code: ${\n                    chalk.red(spawnReturn.status) }`;\n                throw new Error(msg);\n            }\n            return null;\n        }\n        return new Promise((resolve, reject) => {\n            spawnReturn.on('close', code => {\n                if (code === 0) {\n                    resolve();\n                    return;\n                }\n                msg = `${ options.packageManager } ${ mode } failed with code: ${\n                    chalk.red(code) }`;\n                error(msg);\n                reject(msg);\n            });\n        });\n    };\n\n    const installMissing = () => installOrPrune('install');\n    const pruneExcessive = () => installOrPrune('prune');\n\n    if (syncOrAsync === 'sync') {\n        try {\n            if (installNeeded) {\n                installMissing();\n            }\n\n            if (pruneNeeded) {\n                pruneExcessive();\n            }\n\n            success = true;\n        } catch (error) {\n            success = false;\n        }\n        return finish();\n    }\n\n    // Async scenario\n    if (installNeeded) {\n        installPrunePromise = installPrunePromise.then(installMissing);\n    }\n\n    if (pruneNeeded) {\n        installPrunePromise = installPrunePromise.then(pruneExcessive);\n    }\n\n    return installPrunePromise\n        .then(() => {\n            success = true;\n            return finish();\n        })\n        .catch(() => {\n            success = false;\n            return finish();\n        });\n};\n\nmodule.exports = (...args) => checkDependenciesHelper('async', ...args);\n\nmodule.exports.sync = (...args) => {\n    if (!spawnSync) {\n        throw new Error([\n            'Your version of Node.js doesn\\'t support child_process.spawnSync.',\n            'Update Node.js or use require(\\'checkDependencies\\') instead of',\n            'require(\\'checkDependencies\\').sync.',\n        ].join(' '));\n    }\n    return checkDependenciesHelper('sync', ...args);\n};\n"]}