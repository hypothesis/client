@use "../mixins/buttons";
@use "../mixins/layout";
@use "../mixins/molecules";
@use "../mixins/utils";
@use '../variables' as var;

$adder-transition-duration: 80ms;

// Main class for the root element of the "adder" toolbar that appears when the
// user makes a text selection.
.annotator-adder {
  // Reset all inherited properties to their initial values. This prevents CSS
  // property values from the host page being inherited by elements of the
  // Adder, even when using Shadow DOM.
  all: initial;

  @include utils.border;

  position: absolute;
  box-sizing: border-box;
  direction: ltr;
  background: var.$color-background;
  border-radius: var.$annotator-border-radius;

  // Prevent the browser from selecting text in the adder itself during text
  // selection.
  //
  // See https://github.com/hypothesis/product-backlog/issues/878
  user-select: none;

  // The adder toolbar has a distinctive, broad-spreading drop shadow
  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.25);

  // Give the adder a very low opacity initially.  It will then fade-in when
  // shown.
  opacity: 0.05;

  // Adder entry animation settings
  animation-duration: $adder-transition-duration;
  animation-timing-function: ease-in;
  animation-fill-mode: forwards;

  &--down.is-active {
    animation-name: adder-fade-in, adder-pop-down;
  }

  &--up.is-active {
    animation-name: adder-fade-in, adder-pop-up;
  }
}

.annotator-adder-arrow {
  @include molecules.menu-arrow;
  // Horizontal centering, part 1
  left: 50%;

  &--down {
    // These transforms:
    // 1) Reimplement the "down" variant of the menu-arrow mixin,
    //    rotating the arrow pointer SVG.
    //    Having this here is necessary because all transforms for an element
    //    must be in a single rule, and we also need to:
    // 2) Translate -50% (left) on the X axis to complete horizontal centering
    // 3) Translate up (Y) by 1px to eliminate a faint border line visible in Safari
    transform: rotateX(180deg) translateX(-50%) translateY(1px);
  }

  &--up {
    // Align at top edge of parent element...
    top: 0;
    // Translate on X axis -50% (left) to complete horizontal centering
    // Translate -100% on Y axis (up) to position arrow above parent
    transform: translate(-50%, -100%);
  }
}

.annotator-adder-actions {
  @include layout.row;
}

.annotator-adder-button {
  @include layout.column($align: center);
  @include buttons.reset-native-btn-styles;

  cursor: pointer;
  color: var.$grey-mid;
  font-size: var.$annotator-adder-font-size;
  line-height: var.$annotator-adder-line-height;
  padding: var.$layout-space--small;
  transition: color $adder-transition-duration;

  &__label {
    margin-top: var.$layout-space--xxsmall;
    transition: color $adder-transition-duration;
  }

  &__badge {
    // The badge should be vertically aligned with icons in other toolbar buttons
    // and the label underneath should also align with labels in other buttons.
    background-color: var.$grey-mid;
    border-radius: var.$annotator-border-radius;
    color: var.$color-text--inverted;
    font-weight: bold;
    // For positioning the number appropriately withint the badge background
    padding: 2px 4px;
  }
}

.annotator-adder-actions__separator {
  margin: var.$layout-space--xxsmall;
  @include utils.border--right;
  // Override border color to be a little darker
  border-color: var.$grey-4;
}

// The toolbar has full contrast when not hovered. When the toolbar is hovered,
// the buttons are dimmed except for the one which is currently hovered.
.annotator-adder-actions:hover {
  .annotator-adder-button:not(:hover) {
    color: var.$grey-semi;

    .annotator-adder-button__badge {
      background-color: var.$grey-semi;
    }
  }
}

@keyframes adder-fade-in {
  0% {
    opacity: 0.05;
  }
  20% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}

@keyframes adder-pop-up {
  from {
    transform: scale(0.8) translateY(10px);
  }
  to {
    transform: scale(1) translateY(0px);
  }
}

@keyframes adder-pop-down {
  from {
    transform: scale(0.8) translateY(-10px);
  }
  to {
    transform: scale(1) translateY(0px);
  }
}
